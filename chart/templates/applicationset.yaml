{{- range $k, $v := .Values.apps }}
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: "{{ $k }}"
  annotations: {{- include "sulfoxide-radon.annotations" $ | nindent 4 }}
  labels: {{- include "sulfoxide-radon.labels" $ | nindent 4 }}
spec:
  generators:
    - matrix:
        generators:
          - list:
              elements:
                {{ range $service, $serviceConfig := $v -}}
                {{- range $landscape, $revision := $serviceConfig.landscapes}}
                - landscape: "{{ $landscape }}"
                  serviceName: "{{ $service }}"
                  repoURL: "{{ $serviceConfig.repoURL }}"
                  chart: "{{ $serviceConfig.chart }}"
                  revision: "{{ $revision }}"
                {{- end -}}
                {{- end }}
          - clusters:
              selector:
                matchLabels:
                  atomi.cloud/cluster-type: 'virtual'
                  atomi.cloud/cluster-landscape: "{{ `{{landscape}}` }}"
                  atomi.cloud/enable-appset: "true"
  template:
    metadata:
      name: '{{ `{{nameNormalized}}` }}-{{ $k }}-{{ `{{serviceName}}` }}'
      labels:
        atomi.cloud/landscape: "{{ `{{landscape}}` }}"
        atomi.cloud/platform: "{{ $k }}"
        atomi.cloud/service: "{{ `{{serviceName}}` }}"
      annotations:
        atomi.cloud/landscape: "{{ `{{landscape}}` }}"
        atomi.cloud/platform: "{{ $k }}"
        atomi.cloud/service: "{{ `{{serviceName}}` }}"
    spec:
      project: "{{ $k }}"
      sources:
        - repoURL: "{{ `{{repoURL}}` }}"
          targetRevision: "{{ `{{revision}}` }}"
          helm:
            valueFiles:
              - values.yaml
              - "values.{{ `{{landscape}}` }}.yaml"
              - "$values/values/{{ $k }}/{{ `{{serviceName}}` }}/values.{{ `{{landscape}}` }}.yaml"
          chart: "{{ `{{chart}}` }}"
        - repoURL: "{{ $.Values.self.repo }}"
          targetRevision: "{{ $.Values.self.branch }}"
          ref: "values"

      destination:
        server: '{{ `{{server}}` }}'
        namespace: "{{ $k }}"
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        retry:
          limit: 15
        syncOptions:
          - CreateNamespace=true
---
{{- end }}